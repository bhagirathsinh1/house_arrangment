{
    "sourceFile": "lib/screen/theatre_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1645770939493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1645774075085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,7 @@\n import 'package:flutter/material.dart';\r\n import 'package:map_demo/seat_info.dart';\r\n import 'package:map_demo/seating_arrangment.dart';\r\n-import 'package:map_demo/widget/theatre_light_widget.dart';\r\n \r\n class HomeScreen extends StatefulWidget {\r\n   HomeScreen({Key? key, required this.rowvalue, required this.columnvalue})\r\n       : super(key: key);\r\n@@ -51,12 +50,8 @@\n                   withDetailHouse: withDetailHouse,\r\n                   withoutDetailHouse: withoutDetailHouse),\r\n             ),\r\n             Positioned(\r\n-              top: 55,\r\n-              child: TheatreLightWidget(),\r\n-            ),\r\n-            Positioned(\r\n               top: size.height / 6,\r\n               child: Container(\r\n                 height: size.height / 1.5,\r\n                 width: size.width * 0.90,\r\n"
                }
            ],
            "date": 1645770939493,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\nimport 'package:map_demo/seat_info.dart';\r\nimport 'package:map_demo/seating_arrangment.dart';\r\nimport 'package:map_demo/widget/theatre_light_widget.dart';\r\n\r\nclass HomeScreen extends StatefulWidget {\r\n  HomeScreen({Key? key, required this.rowvalue, required this.columnvalue})\r\n      : super(key: key);\r\n  final int rowvalue;\r\n  final int columnvalue;\r\n\r\n  @override\r\n  _SeatSelectorState createState() => _SeatSelectorState();\r\n}\r\n\r\nclass _SeatSelectorState extends State<HomeScreen> {\r\n  @override\r\n  void initState() {\r\n    super.initState();\r\n    // setState(() {\r\n    unsoldHouse = widget.rowvalue * widget.columnvalue;\r\n    // });\r\n  }\r\n\r\n  int unsoldHouse = 0;\r\n  int withDetailHouse = 0;\r\n  int withoutDetailHouse = 0;\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    Size size = MediaQuery.of(context).size;\r\n    return Scaffold(\r\n      appBar: AppBar(\r\n        title: Text(\r\n          'Total Seat - ${widget.rowvalue * widget.columnvalue}',\r\n        ),\r\n        backgroundColor: Colors.black,\r\n      ),\r\n      body: Container(\r\n        child: Stack(\r\n          alignment: Alignment.center,\r\n          children: [\r\n            Container(\r\n              alignment: Alignment.topLeft,\r\n              color: Colors.black,\r\n              width: size.width,\r\n            ),\r\n            Positioned(\r\n              top: 10,\r\n              child: HomeInfo(\r\n                  unsoldHouse: unsoldHouse,\r\n                  withDetailHouse: withDetailHouse,\r\n                  withoutDetailHouse: withoutDetailHouse),\r\n            ),\r\n            Positioned(\r\n              top: 55,\r\n              child: TheatreLightWidget(),\r\n            ),\r\n            Positioned(\r\n              top: size.height / 6,\r\n              child: Container(\r\n                height: size.height / 1.5,\r\n                width: size.width * 0.90,\r\n                child: Column(\r\n                  children: [\r\n                    HomeArrangemnt(\r\n                        unsoldHouse: unsoldHouse,\r\n                        withoutDetailHouse: withoutDetailHouse,\r\n                        withDetailHouse: withDetailHouse,\r\n                        onunsoldHouseChanged: ((value) => setState(() {\r\n                              unsoldHouse = value;\r\n                            })),\r\n                        onwithoutDetailHouseChanged: ((value) => setState(() {\r\n                              withoutDetailHouse = value;\r\n                            })),\r\n                        onwithDetailHouseChanged: ((value) => setState(() {\r\n                              withDetailHouse = value;\r\n                            })),\r\n                        size: size,\r\n                        rowvalue: widget.rowvalue,\r\n                        columnvalue: widget.columnvalue),\r\n                  ],\r\n                ),\r\n              ),\r\n            ),\r\n          ],\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}